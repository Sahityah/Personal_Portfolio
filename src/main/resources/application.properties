spring.application.name=Personal_Portfolio
server.port=8080

# --- Database connection ---
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# --- Google OAuth2 config ---
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# --- JPA settings ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Kafka Configuration
spring.kafka.bootstrap-servers=portfolio-kafka-sahityah799-784b.l.aivencloud.com:27593

# Security protocol and SASL mechanism
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN

# SASL authentication (set via env vars in Render or Railway later)
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="avnadmin" password="${KAFKA_PASSWORD}";

# Producer configs
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer configs
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=stock-dashboard-group
spring.kafka.consumer.auto-offset-reset=earliest

# Trust JSON deserialization
spring.kafka.consumer.properties.spring.json.trusted.packages=*


# Market Data API Configuration (Placeholder)
# Replace with your actual market data provider details (e.g., Alpha Vantage, Zerodha Kite Connect)
market.data.api.base-url=https://finnhub.io/api/v1
market.data.api.key=d1cgb1hr01qre5alnsf0d1cgb1hr01qre5alnsfg
# Interval for fetching market data in milliseconds
# Fetch every 5 seconds
market.data.fetch.interval=5000